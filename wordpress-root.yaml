AWSTemplateFormatVersion: "2010-09-09"

Description: Root Stack for Wordpress 

Parameters:
  Environment:
    Description: Environment Name
    Type: String

  Engine:
    Type: String
    Default: MySQL

  VpcId:
    Type: String
  
  VpcCIDR:
    Description: VPC CIDR
    Type: String
    Default: 10.0.0.0/16
  
  PublicSubnet1CIDR:
    Description: Public Subnet 1 CIDR
    Type: String
    Default: 10.0.0.0/24
  
  PublicSubnet2CIDR:
    Description: Public Subnet 2 CIDR
    Type: String
    Default: 10.0.1.0/24

  DBInstanceId:
    Description: "The RDS DB Instance Identifier"
    Type: String
    Default: "rds-mysql-inst01"
    
  PrivateSubnet1CIDR:
    Description: Private Subnet 1 CIDR
    Type: String
    Default: 10.0.2.0/24
  
  PrivateSubnet2CIDR:
    Description: Private Subnet 2 CIDR
    Type: String
    Default: 10.0.3.0/24 
  
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro

  InstanceName:
    Type: String

  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    Default: 0.0.0.0/0
    
  
  AmiType:
    Description: what kind of AMI
    Type: String
    Default: AmazonLinux2 
    AllowedValues:
      - AmazonLinux2 
      - AmazonLinux
  
  DBName:
    Default: wordpressdb
    Description: The WordPress database name
    Type: String
  
  DBUser:
    NoEcho: 'true'
    Description: The WordPress database admin account username
    Type: String
    
  
  DBInstanceClass:
    Description: The name of the compute and memory capacity classes of the DB instance.
    Type: String
    Default: db.t2.micro
    AllowedValues:
      - db.t2.micro
      - db.t2.small
  
  AllocatedStorage:
    Description: The allocated storage size, specified in gigabytes (GB).
    Type: String
    ConstraintDescription: "Value must be a valid number between 20-16384."
    Default: 10

  DBPassword:
    NoEcho: 'true'
    Description: The WordPress database admin account password
    Type: String
  

Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://dweiskopf.s3.amazonaws.com/wordpress-vpc.yml
      Parameters:
        Environment: !Ref Environment 
        VpcId: !Ref VpcId
        VpcCIDR: !Ref VpcCIDR
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
        PrivateSubnet1CIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2CIDR: !Ref PrivateSubnet2CIDR
  
  WordpressDBStack:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: https://dweiskopf.s3.amazonaws.com/wordpress-database1.yaml
      Parameters:
        DBInstanceId: !Ref DBInstanceId
        Engine: MySQL
        SSHLocation: !Ref SSHLocation
        DBInstanceClass: !Ref DBInstanceClass
        AllocatedStorage: !Ref AllocatedStorage
        DBName: !Ref DBName
        DBUser: !Ref DBUser
        DBPassword: !Ref DBPassword
        VpcId: !GetAtt VPCStack.Outputs.VPC
        SubnetId1: !GetAtt VPCStack.Outputs.SubnetId1
        SubnetId2: !GetAtt VPCStack.Outputs.SubnetId2

  EC2Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn: WordpressDBStack 
    Properties: 
      TemplateURL: https://dweiskopf.s3.amazonaws.com/wordpresss-instance-template.yaml
      Parameters:
        DBName: !Ref DBName
        DBUser: !Ref DBUser
        DBPassword: !Ref DBPassword
        InstanceName: !Ref InstanceName
        InstanceType: !Ref InstanceType
        AmiType: !Ref AmiType
        SubnetId1: !GetAtt VPCStack.Outputs.PublicSubnet1 
        WebSecurityGroup: !GetAtt  WordpressDBStack.Outputs.WebSecurityGroup
        DBEndpoint:  !GetAtt  WordpressDBStack.Outputs.DBEndpoint 

  DNSStack: 
    Type: AWS::CloudFormation::Stack
    DependsOn: EC2Stack 
    Properties: 
      TemplateURL: https://dweiskopf.s3.amazonaws.com/wordpress-dns.yaml
      TimeoutInMinutes: '60'
      Parameters:
        PublicIp: !GetAtt EC2Stack.Outputs.PublicIp